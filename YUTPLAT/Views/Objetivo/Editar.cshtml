@using YUTPLAT.ViewModel
@model ObjetivoViewModel

<div class="content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="header">
                        <h4 class="title">Editar</h4>
                    </div>
                    <div class="content">
                        @using (Html.BeginForm("Editar", "Objetivo", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                        {
                            @Html.HiddenFor(m => m.Id);

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="row">
                                <div class="col-xs-12 col-sm-6 col-md-4">
                                    @Html.LabelFor(m => m.Nombre)
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
                                    <span class="aclaracion">(máximo 150 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-xs-12 col-sm-6 col-md-4">
                                    @Html.LabelFor(m => m.IdArea)
                                    <span class="text-danger">*</span>
                                    @Html.DropDownListFor(m => m.IdArea, new SelectList(new List<SelectListItem> { new SelectListItem { Text = Model.AreaViewModel.Nombre, Value = Model.AreaViewModel.Id.ToString() } }, "Value", "Text"), new { @id = "ddlAreas", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.IdArea, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    @Html.LabelFor(m => m.Descripcion)
                                    @Html.TextAreaFor(m => m.Descripcion, new { @rows = 5, @class = "form-control" })
                                    <span class="aclaracion">(máximo 2000 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.FechaCreacion)
                                    <p class="description">@Model.FechaCreacion</p>
                                    @Html.HiddenFor(m => m.FechaCreacion)
                                </div>

                                @if (!String.IsNullOrEmpty(Model.FechaUltimaModificacion))
                                {
                                    <div class="col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(m => m.UltimoUsuarioModifico)
                                        <p class="description">@Model.UltimoUsuarioModifico</p>
                                    </div>

                                    <div class="col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(m => m.FechaUltimaModificacion)
                                        <p class="description">@Model.FechaUltimaModificacion</p>
                                        @Html.HiddenFor(m => m.FechaUltimaModificacion)
                                    </div>
                                }
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <h6>
                                        <small>
                                            <span class="text-danger">* campos obligatorios</span>
                                        </small>
                                    </h6>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <input type="submit" class="btn btn-fill btn-info" value="Guardar" />
                                    <button class="btn btn-fill btn-info" onclick="history.go(-1); return false;">Volver</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $("#ddlAreas").select2({
        ajax: {
            beforeSend: function (xhr, opts) {
            },
            url: '@Url.Action("BuscarAreas", "Area")',
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    nombreArea: params.term,
                };
            },
            processResults: function (data, page) {
                return {
                    results: procesarArea(data)
                };
            },
            cache: true
        },
        minimumInputLength: 1,
        language: {
            inputTooShort: function (args) {
                return "Ingrese al menos un caracter";
            },
            inputTooLong: function (args) {
                return "Texto demadiado largo";
            },
            errorLoading: function () {
                return "Error al cargar resultados";
            },
            loadingMore: function () {
                return "Cargando más resultados";
            },
            noResults: function () {
                return "No se encontraron resultados";
            },
            searching: function () {
                return "Buscando...";
            },
            maximumSelected: function (args) {
                return "Error al cargar resultados";
            }
        }
    });

    function procesarResultado(resultado) {
        return { id: resultado.Id, text: resultado.Nombre };
    }

    function procesarArea(resultados) {
        var array = [];
        for (i = 0; i < resultados.length; i++) {
            array.push(procesarResultado(resultados[i]));
        }
        return array
    }

    var mensageExito = '@Html.Raw(@ViewBag.MensageExito)';

    if (mensageExito != '') {
        demo.showNotificationInfo('top', 'center', mensageExito, 'pe-7s-check');
    }

</script>