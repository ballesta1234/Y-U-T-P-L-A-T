@using YUTPLAT.ViewModel
@model PersonaViewModel

<script type="text/javascript">
    $(document).ready(function () {

        $("#errorGeneral").hide();

        $("input[type=text]").keydown(function () {
            $("#errorGeneral").hide();
        });

        $('#form').submit(function () {

            if (!$('#form').valid()) {

                $("#errorGeneral").show();
                return false;
            }
            else {
                return true;
            }
        });

        $('#Rol').change(function (e) {
            
            if ($('#Rol option:selected').text() == ' ' || $('#Rol option:selected').text() == 'admin') {
                $("#divArea").hide();                
            }

            if ($('#Rol option:selected').text() == 'operador' || $('#Rol option:selected').text() == 'usuario') {
                $("#divArea").show();                
            }
            else if ($('#Rol option:selected').text() == 'admin') {              
                $("#ddlAreas").rules("remove", "required");
            }
        });

        if ($('#Rol option:selected').text() == ' ' || $('#Rol option:selected').text() == 'admin') {
            $("#divArea").hide();
        }

        if ($('#Rol option:selected').text() == 'operador' || $('#Rol option:selected').text() == 'usuario') {
            $("#divArea").show();
        }

    });

</script>

<div class="content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="header">
                        <h4 class="title">Crear</h4>
                    </div>
                    <div class="content">
                        @using (Html.BeginForm("Crear", "Persona", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id="form", role = "form" }))
                        {
                            <div id="errorGeneral" style="display:none;" class="text-danger">
                                Verifique que todos los campos estén cargados y sean correctos.
                            </div>

                            <div class="row">
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.Nombre)
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
                                    <span class="aclaracion">(máximo 150 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.Apellido)
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control" })
                                    <span class="aclaracion">(máximo 150 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.Apellido, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.Email)
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    <span class="aclaracion">(máximo 150 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.Rol)
                                    <span class="text-danger">*</span>
                                    @Html.EnumDropDownListFor(x => x.Rol, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Rol, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.NombreUsuario)
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.NombreUsuario, new { @class = "form-control" })
                                    <span class="aclaracion">(máximo 150 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.NombreUsuario, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.Contrasenia)
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.Contrasenia, new { @class = "form-control", type = "password" })
                                    <span class="aclaracion">(máximo 150 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.Contrasenia, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(m => m.ConfirmarContrasenia)
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.ConfirmarContrasenia, new { @class = "form-control", type = "password" })
                                    <span class="aclaracion">(máximo 150 caracteres)</span>
                                    @Html.ValidationMessageFor(m => m.ConfirmarContrasenia, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    <div id="divArea" style="display:none;">
                                        @Html.LabelFor(m => m.IdArea, new { @class = "area" })
                                        <span class="text-danger">*</span>
                                        @if (Model.AreaViewModel != null && Model.AreaViewModel.Id > 0)
                                        {
                                            @Html.DropDownListFor(m => m.IdArea, new SelectList(new List<SelectListItem> { new SelectListItem { Text = Model.AreaViewModel.Nombre, Value = Model.AreaViewModel.Id.ToString() } }, "Value", "Text"), new { @id = "ddlAreas", @class = "form-control area" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => m.IdArea, Enumerable.Empty<SelectListItem>(), new { @id = "ddlAreas", @class = "form-control area" })
                                            @Html.ValidationMessageFor(m => m.IdArea, "", new { @class = "text-danger area" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <h6>
                                        <small>
                                            <span class="text-danger">* campos obligatorios</span>
                                        </small>
                                    </h6>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <input type="submit" class="btn btn-fill btn-info" value="Guardar" />
                                    <button class="btn btn-fill btn-info" onclick="history.go(-1); return false;">Volver</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    $("#ddlAreas").select2({
        ajax: {
            beforeSend: function (xhr, opts) {
            },
            url: '@Url.Action("BuscarAreas", "Area")',
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    nombreArea: params.term,
                };
            },
            processResults: function (data, page) {
                return {
                    results: procesarArea(data)
                };
            },
            cache: true
        },
        minimumInputLength: 1,
        language: {
            inputTooShort: function (args) {
                return "Ingrese al menos un caracter";
            },
            inputTooLong: function (args) {
                return "Texto demadiado largo";
            },
            errorLoading: function () {
                return "Error al cargar resultados";
            },
            loadingMore: function () {
                return "Cargando más resultados";
            },
            noResults: function () {
                return "No se encontraron resultados";
            },
            searching: function () {
                return "Buscando...";
            },
            maximumSelected: function (args) {
                return "Error al cargar resultados";
            }
        }
    });

    function procesarResultado(resultado) {
        return { id: resultado.Id, text: resultado.Nombre };
    }

    function procesarArea(resultados) {
        var array = [];
        for (i = 0; i < resultados.length; i++) {
            array.push(procesarResultado(resultados[i]));
        }
        return array
    }

</script>
